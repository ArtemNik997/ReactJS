{"ast":null,"code":"import { defer } from 'react-router-dom';\nconst serverUrl = 'https://jsonplaceholder.typicode.com/';\nexport class Api {\n  static async getUsers() {\n    return await get('users');\n  }\n  static async getAlbums() {\n    return await get('albums');\n  }\n  static async getUser({\n    id\n  }) {\n    return await get(`users/${id}`);\n  }\n  static async getUserAlbums(filters) {\n    const query = new URLSearchParams(filters).toString();\n    console.log(serverUrl + `albums?${query}`);\n    return await get(`albums?${query}`);\n  }\n  static async getAlbum({\n    id\n  }) {\n    return await get(`albums/${id}`);\n  }\n  static getPhotos(filters) {\n    const query = new URLSearchParams(filters).toString();\n    console.log(serverUrl + `photos?${query}`);\n    return get(`photos?${query}`);\n  }\n}\nconst get = async url => {\n  const response = await fetch(`${serverUrl}/${url}`);\n  if (!response.ok) {\n    console.log('response not ok 404');\n    throw new Response('', {\n      status: 404\n    });\n  }\n  const obj = await response.json();\n  return obj;\n};","map":{"version":3,"names":["defer","serverUrl","Api","getUsers","get","getAlbums","getUser","id","getUserAlbums","filters","query","URLSearchParams","toString","console","log","getAlbum","getPhotos","url","response","fetch","ok","Response","status","obj","json"],"sources":["/workspaces/ReactJS/src/utils/DataLoader.js.jsx"],"sourcesContent":["import { defer } from 'react-router-dom';\r\n\r\nconst serverUrl = 'https://jsonplaceholder.typicode.com/';\r\n\r\nexport class Api {\r\n  static async getUsers() {\r\n    return await get('users');\r\n  }\r\n\r\n  static async getAlbums() {\r\n    return await get('albums');\r\n  }\r\n\r\n  static async getUser({ id }) {\r\n    return await get(`users/${id}`);\r\n  }\r\n\r\n  static async getUserAlbums(filters) {\r\n    const query = new URLSearchParams(filters).toString();\r\n    console.log(serverUrl + `albums?${query}`);\r\n    return await get(`albums?${query}`);\r\n  }\r\n\r\n  static async getAlbum({ id }) {\r\n    return await get(`albums/${id}`);\r\n  }\r\n\r\n  static getPhotos(filters) {\r\n    const query = new URLSearchParams(filters).toString();\r\n    console.log(serverUrl + `photos?${query}`);\r\n    return get(`photos?${query}`);\r\n  }\r\n}\r\n\r\nconst get = async (url) => {\r\n  const response = await fetch(`${serverUrl}/${url}`);\r\n\r\n  if (!response.ok) {\r\n    console.log('response not ok 404');\r\n    throw new Response('', { status: 404 });\r\n  }\r\n\r\n  const obj = await response.json();\r\n  return obj;\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAExC,MAAMC,SAAS,GAAG,uCAAuC;AAEzD,OAAO,MAAMC,GAAG,CAAC;EACf,aAAaC,QAAQA,CAAA,EAAG;IACtB,OAAO,MAAMC,GAAG,CAAC,OAAO,CAAC;EAC3B;EAEA,aAAaC,SAASA,CAAA,EAAG;IACvB,OAAO,MAAMD,GAAG,CAAC,QAAQ,CAAC;EAC5B;EAEA,aAAaE,OAAOA,CAAC;IAAEC;EAAG,CAAC,EAAE;IAC3B,OAAO,MAAMH,GAAG,CAAE,SAAQG,EAAG,EAAC,CAAC;EACjC;EAEA,aAAaC,aAAaA,CAACC,OAAO,EAAE;IAClC,MAAMC,KAAK,GAAG,IAAIC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACb,SAAS,GAAI,UAASS,KAAM,EAAC,CAAC;IAC1C,OAAO,MAAMN,GAAG,CAAE,UAASM,KAAM,EAAC,CAAC;EACrC;EAEA,aAAaK,QAAQA,CAAC;IAAER;EAAG,CAAC,EAAE;IAC5B,OAAO,MAAMH,GAAG,CAAE,UAASG,EAAG,EAAC,CAAC;EAClC;EAEA,OAAOS,SAASA,CAACP,OAAO,EAAE;IACxB,MAAMC,KAAK,GAAG,IAAIC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACb,SAAS,GAAI,UAASS,KAAM,EAAC,CAAC;IAC1C,OAAON,GAAG,CAAE,UAASM,KAAM,EAAC,CAAC;EAC/B;AACF;AAEA,MAAMN,GAAG,GAAG,MAAOa,GAAG,IAAK;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAElB,SAAU,IAAGgB,GAAI,EAAC,CAAC;EAEnD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChBP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,MAAM,IAAIO,QAAQ,CAAC,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACzC;EAEA,MAAMC,GAAG,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EACjC,OAAOD,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}